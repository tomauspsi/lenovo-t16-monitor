name: tracker

on:
  schedule:
    - cron: "0 7 1,15 * *" # ogni 1 e 15 alle 07:00 (ora universale)
  workflow_dispatch: {} # avvio manuale dal tab Actions

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  run-tracker-and-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 1) Python: genera report (Markdown + JSON) e copia news.json nella dashboard
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip" # velocizza: riusa i pacchetti Python
          cache-dependency-path: scripts/requirements.txt
      - name: Install Python deps
        run: pip install -r scripts/requirements.txt
      - name: Run tracker (ultimi 14 giorni)
        run: python scripts/tracker.py --config scripts/config.yaml --since-days 14

      # 2) Commit dei report nel repository (non blocca se non ci sono cambi)
      - name: Commit updated reports
        run: |
          git config user.name "actions-bot"
          git config user.email "actions@users.noreply.github.com"
          git add report/notebook-tracking.md report/news.json report/run-manifest.json notebook-dashboard/public/news.json || true
          git commit -m "Update report MD/JSON and dashboard snapshot" || echo "No changes"
          git push || true

      # 3) Node + Vite: build del sito statico
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm" # velocizza: riusa i pacchetti Node
          cache-dependency-path: notebook-dashboard/package-lock.json
      - name: Build dashboard
        working-directory: notebook-dashboard
        env:
          BASE_URL: "/${{ github.event.repository.name }}/"
        run: |
          npm ci
          npm run build

      # 4) Configura e carica il sito per Pages
      - name: Configure Pages
        uses: actions/configure-pages@v5
      - name: Upload static site
        uses: actions/upload-pages-artifact@v3
        with:
          path: notebook-dashboard/dist # <- corretto (niente "distst")

  deploy:
    needs: run-tracker-and-build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to Pages
        id: deployment
        uses: actions/deploy-pages@v4
- name: Check news.json in public
  run: |
    ls -l notebook-dashboard/public
    test -f notebook-dashboard/public/news.json || (echo "news.json missing" && exit 1)