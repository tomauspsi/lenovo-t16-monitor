name: Build Notebook Report

on:
  workflow_dispatch:
  schedule:
    - cron: "0 7 */14 * *"  # ogni 14 giorni alle 07:00 UTC

permissions:
  contents: write  # necessario per commit/push e release

concurrency:
  group: build-notebook-report
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install Python deps
        run: pip install -r requirements.txt

      - name: Install Pandoc, TeX Live and fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc \
            texlive-xetex texlive-latex-recommended texlive-fonts-recommended texlive-plain-generic \
            fonts-noto fonts-noto-mono fonts-noto-hinted

      - name: Generate Markdown report
        run: |
          python3 scripts/tracker.py --config scripts/config.yaml --since-days 14 --max 50 --write-md report/notebook-tracking.md

      - name: Build PDF with Pandoc (XeLaTeX)
        run: |
          pandoc report/notebook-tracking.md \
            --template=scripts/report-template.tex \
            --pdf-engine=xelatex \
            -o report/notebook-tracking.pdf

      - name: Detect changes in PDF
        id: detect
        shell: bash
        run: |
          git add report/notebook-tracking.pdf
          if git diff --staged --quiet -- report/notebook-tracking.pdf; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Compute date (UTC)
        id: d
        run: echo "today=$(date -u +%F)" >> $GITHUB_OUTPUT

      # --- Release logic: idempotente e pulito ---
      - name: Delete existing Release and Tag (if any)
        if: steps.detect.outputs.changed == 'true'
        uses: actions/github-script@v7
        env:
          TAG_NAME: report-${{ steps.d.outputs.today }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo  = context.repo.repo;
            const tag   = process.env.TAG_NAME;

            // Prova a cancellare una release esistente con lo stesso tag
            try {
              const rel = await github.rest.repos.getReleaseByTag({ owner, repo, tag });
              await github.rest.repos.deleteRelease({ owner, repo, release_id: rel.data.id });
              core.info(`Deleted existing release for tag ${tag}`);
            } catch (e) {
              core.info(`No existing release for tag ${tag} (ok)`);
            }
            // Prova a cancellare anche il riferimento del tag remoto
            try {
              await github.rest.git.deleteRef({ owner, repo, ref: `tags/${tag}` });
              core.info(`Deleted ref tags/${tag}`);
            } catch (e) {
              core.info(`No ref tags/${tag} to delete (ok)`);
            }

      - name: Publish/Update Release with PDF
        if: steps.detect.outputs.changed == 'true'
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: report-${{ steps.d.outputs.today }}
          name: Notebook Report â€“ ${{ steps.d.outputs.today }}
          body: |
            Nuovo report pubblicato: ${{ steps.d.outputs.today }}
      
            PDF nel repo (branch corrente):
            https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/report/notebook-tracking.pdf
      
            Scarica il PDF direttamente dalla Release (asset allegato).
          draft: false
          prerelease: false
          files: |
            report/notebook-tracking.pdf
          fail_on_unmatched_files: false
          make_latest: true

        - name: Commit PDF (if changed)
          if: steps.detect.outputs.changed == 'true'
          run: |
            git config --global user.name "github-actions[bot]"
            git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add report/notebook-tracking.pdf || true
            git commit -m "Automated PDF update [skip ci]" || echo "No changes to commit"
            # pulizia tag locale per evitare conflitti nei pull/push successivi
            git tag -d report-${{ steps.d.outputs.today }} || true
            git push
